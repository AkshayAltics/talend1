package routines;
import com.sun.rowset.internal.Row;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;

import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import jxl.Cell;

public class ExcelRoutines {

   
    public static void helloExample(String message) {
        if (message == null) {
            message = "World"; //$NON-NLS-1$
        }
        System.out.println("Hello " + message + " !"); //$NON-NLS-1$ //$NON-NLS-2$
    }
  
    
    
    public static void readExcel() throws BiffException, IOException 
    
    {
    	 String FilePath = "F:\\Talend workspacce\\EMPExcelSampleData.xls";
          //String path = "f:\\outputOfEXCELtoCSV.csv";
    	try {
    		
          	//String FilePath = "F:\\Talend workspacce\\EMPExcelSampleData.xls";
                String path = "F:\\Talend workspacce\\testing_12062019.csv"; 
		FileWriter writer;
                writer = new FileWriter(path, true);  //True = Append to file, false = Overwrite
                
		FileInputStream fs = new FileInputStream(FilePath);
		Workbook wb = Workbook.getWorkbook(fs);

		// TO get the access to the sheet
		Sheet sh = wb.getSheet(1);
		
		// To get the number of rows present in sheet
		
                HashMap<String, String> sheetdata;
		HashMap<Integer, String> superset;
                superset = new HashMap<Integer, String>();
                
                String shn[]=wb.getSheetNames();
		
            
            
          
	
     try
        {

     for(int s=0;s<wb.getSheetNames().length;s++)
        {
	sh=wb.getSheet(s);
		int totalNoOfRows = sh.getRows();
		// To get the number of columns present in sheet
		int totalNoOfCols = sh.getColumns();
		String colname="";
               // System.out.println(" names of sheetname "+shn[s]);
		for (int col = 0; col < totalNoOfCols; col++) {
                    
                                  colname=sh.getCell(col,0).getContents();
                                  superset.put(col,colname);
                                
                                        }
                 
               }
                        //System.out.println(" and there column name"+superset);
            //superset.clear();       
        }
        
        catch(Exception ex)
        {
            System.out.println("exception is createSuperSetMethod");
        }

        System.out.println(" and there column name"+superset);    
       
            
for(int s=0;s<wb.getSheetNames().length;s++)
{

		System.out.println("nothing "+shn[s]);
                int row_init=0;
		sh=wb.getSheet(s);
		int totalNoOfRows = sh.getRows();
		// To get the number of columns present in sheet
		int totalNoOfCols = sh.getColumns();
		if(s!=0)
                {
                    row_init=1;
                }
                else
                    row_init=0;
                
		for (int rows = row_init; rows < totalNoOfRows; rows++)
                    
		{
                    sheetdata = new HashMap<String, String>();
				
                 
                          for (int col = 0; col < superset.size(); col++) {
				
                              String supercolumn=superset.get(col);
                              int res=creatSuperSet(FilePath,supercolumn,shn[s]);
                              if(res==1)
                              {
                                    for(int j=0;j<totalNoOfCols;j++)
                                    {
                                        if(supercolumn.equals(sh.getCell(j,0).getContents()))
                                        {
                                            String data = sh.getCell(j, rows).getContents();
                                  sheetdata.put(supercolumn,data);
                                     writer.write(sheetdata.put(supercolumn,data));
                                                writer.write(",");
                                        }
                                        
                                    }
                                  
                              }
                              else
                              {
                                  sheetdata.put(supercolumn,"null");
                                  writer.write(sheetdata.put(supercolumn,"Null"));
                                                writer.write(",");
                               }
                             
			  }
			// System.out.println(sheetdata);
			 writer.write("\r\n");
                         sheetdata.clear();
                                
                             
			}

                         
        }         
            
                writer.close();
              
    }
     catch (Exception e) {
 
    	// TODO Auto-generated catch block
    
    	 System.out.println("Exception is!"+e);
    
    	}
    }
    
   private static int creatSuperSet(String FilePath,String colname1,String Sheetname ) throws FileNotFoundException, IOException, BiffException {
     
           HashMap<Integer, String> superset = new HashMap<Integer, String>();
       		FileInputStream fs = new FileInputStream(FilePath);
		Workbook wb = Workbook.getWorkbook(fs);
                   String colnamein=colname1;
                   String sheetname=Sheetname;
		
		Sheet sh = wb.getSheet(sheetname);

	
		int totalNoOfCols = sh.getColumns();
		String colname="";
          
		for (int col = 0; col < totalNoOfCols; col++) {
                    
                                  colname=sh.getCell(col,0).getContents();
                                   if(!superset.containsKey(colname))
                                   {
                                        superset.put(col,colname);
                                   }
                                 
                                 
                                
                                        }
                //System.out.println(superset);

                  if(superset.containsValue(colnamein))  
     {
      
         return 1;
     }
      else
     {
  
      return 0;
     }
    
    }
    
    
    
    
    
    
    
 
    }
    
